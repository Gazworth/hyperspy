#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright © 2007 Francisco Javier de la Peña
# Copyright © 2010 Francisco Javier de la Peña & Stefano Mazzucco
# Copyright © 2011 Francisco Javier de la Peña, Stefano Mazzucco & Michael Sarahan
#
# This file is part of Hyperspy.
#
# Hyperspy is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# Hyperspy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Hyperspy; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  
# USA

import sys
import os, shutil

try:
    import argparse             # new in Python 2.7
    argp = True
except ImportError:
    argp = False
    import optparse


import hyperspy
import hyperspy.Release

hyperspy_module_path=os.path.dirname(hyperspy.__file__)

try:
    import matplotlib as mpl
except ImportError:
    print('matplotlib is not available, exiting.')
    sys.exit(1)

if os.name in ['nt','dos']:
    ipy_dir=os.path.expanduser('~/_ipython')
else:
    ipy_dir=os.path.expanduser('~/.ipython')

if not os.path.exists(ipy_dir):
    os.mkdir(ipy_dir)
shutil.copy('%s/ipython_profile/ipy_profile_hyperspy.py' % hyperspy_module_path, ipy_dir)

if argp:
    parser = argparse.ArgumentParser(add_help=True, 
                                     version=hyperspy.Release.version)
    # The -wthread forces matplotlib to use the WXAgg backend
    # This is necessary to support traits visualisation
    parser.add_argument('-backend', action="store", dest='backend', choices=(
            'gthread', 'qthread', 'q4thread', 'wthread'), default='wthread')
    # If the headless argument is passed, no threading is used and the backend
    # is defined by matplotlibrc, that for a headless system should be 
    # Agg or similar.
    parser.add_argument('-headless', action="store_true", default=False)
    args = parser.parse_args()
    backend = (' -' + args.backend if args.headless is False else '')
else:
    parser = optparse.OptionParser()
    # The -wthread forces matplotlib to use the WXAgg backend
    # This is necessary to support traits visualisation
    parser.add_option('--backend', action="store", dest='backend', choices=(
            'gthread', 'qthread', 'q4thread', 'wthread'), default='wthread')
    # If the headless argument is passed, no threading is used and the backend
    # is defined by matplotlibrc, that for a headless system should be 
    # Agg or similar.
    parser.add_option('--headless', action="store_true", default=False)
    (options, args) = parser.parse_args()
    backend = (' -' + options.backend if options.headless is False else '')

os.system('ipython%s -pylab -p hyperspy' % backend)
